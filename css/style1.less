
.box1{.display;.flex-direction(column)}
.display(){
	display: flex;
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: -o-flex;
}
.flex-direction(@flex-direction:row){ // flex-direction: row | row-reverse | column | column-reverse;
	flex-direction:@flex-direction;  //row默认值：从左到右
	-webkit-flex-direction:@flex-direction;
	-moz-flex-direction:@flex-direction;
	-ms-flex-direction:@flex-direction;
	-o-flex-direction:@flex-direction;
}
.flex-wrap(@flex-wrap:wrap){  //flex-wrap: nowrap | wrap | wrap-reverse;
	flex-wrap:@flex-wrap;            //nowrap默认值：不换行
	-webkit-flex-wrap:@flex-wrap; 
	-moz-flex-wrap:@flex-wrap; 
	-ms-flex-wrap:@flex-wrap; 
	-o-flex-wrap:@flex-wrap; 
}
.flex-flow(@flex-direction:row;@flex-wrap:wrap){ //flex-flow: <flex-direction> || <flex-wrap>;
	flex-flow:@flex-direction @flex-wrap;
	-webkit-flex-flow:@flex-direction @flex-wrap;
	-moz-flex-flow:@flex-direction @flex-wrap;
	-ms-flex-flow:@flex-direction @flex-wrap;
	-o-flex-flow:@flex-direction @flex-wrap;
}
.justify-content(@justify-content:space-between;){ //justify-content: flex-start | flex-end | center | space-between | space-around;
	justify-content:@justify-content;  //项目在主轴上的对齐方式  默认值flex-start：左对齐
	-webkit-justify-content:@justify-content; 
	-moz-justify-content:@justify-content; 
	-ms-justify-content:@justify-content; 
	-o-justify-content:@justify-content; 
}
.align-items(@align-items:stretch;){ //align-items: flex-start | flex-end | center | baseline | stretch;
	align-items:@align-items;    // 项目在交叉轴上对齐方式   没发现有什么用
	-webkit-align-items:@align-items;
	-moz-align-items:@align-items;
	-ms-align-items:@align-items;
	-o-align-items:@align-items;
}
.align-content(@align-content:flex-start){  //align-content: flex-start | flex-end | center | space-between | space-around | stretch;
	align-content:@align-content;  // 多根轴线的对齐方式  默认值stretch：轴线占满整个交叉轴
	-webkit-align-content:@align-content; 
	-moz-align-content:@align-content; 
	-ms-align-content:@align-content; 
	-o-align-content:@align-content; 
}
/* 项目的六个属性 */
.order(@order:0;){  //order: <integer>;
	order:@order;       //项目的排列顺序。数值越小，排列越靠前，默认为0。
	-webkit-order:@order; 
	-moz-order:@order; 
	-ms-order:@order; 
	-o-order:@order; 
}
.flex-grow(@flex-grow:0){  // flex-grow: <number>; /* default 0 */
	flex-grow:@flex-grow;  //项目的放大比例，默认为0
	-webkit-flex-grow:@flex-grow; 
	-moz-flex-grow:@flex-grow; 
	-ms-flex-grow:@flex-grow; 
	-o-flex-grow:@flex-grow; 
}
.flex-shrink(@flex-shrink:1){  //flex-shrink: <number>; /* default 1 */
	flex-shrink:@flex-shrink;  //项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。
	-webkit-flex-shrink:@flex-shrink; 
	-moz-flex-shrink:@flex-shrink; 
	-ms-flex-shrink:@flex-shrink; 
	-o-flex-shrink:@flex-shrink; 
}
.flex-basis(@flex-basis:auto){ //flex-basis: <length> | auto; /* default auto */
	flex-basis:@flex-basis;   //在分配多余空间之前，项目占据的主轴空间（main size） 发现没什么用
	-webkit-flex-basis:@flex-basis;
	-moz-flex-basis:@flex-basis;
	-ms-flex-basis:@flex-basis;
	-o-flex-basis:@flex-basis;
}
.flex(@flex:auto){  //flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
	flex:@arguments; //flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选
	-webkit-flex:@arguments;
	-moz-flex:@arguments;
	-ms-flex:@arguments;
	-o-flex:@arguments;
}
.align-self(@align-self:auto){ // align-self: auto | flex-start | flex-end | center | baseline | stretch;
	align-self:@align-self; //允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto 没啥用
	-webkit-align-self:@align-self; 
	-moz-align-self:@align-self; 
	-ms-align-self:@align-self; 
	-o-align-self:@align-self; 
}
